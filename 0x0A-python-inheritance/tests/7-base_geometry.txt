The ``7-base_geometry`` module
======================

Using ``BaseGeometry``
-------------------

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:

>>> bg = BaseGeometry()

>>> bg.integer_validator("name", 12)

>>> bg.integer_validator("name", 89)

>>> bg.integer_validator("name", -4)
Traceback (most recent call last):
...
ValueError: name must be greater than 0

>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
...
ValueError: name must be greater than 0

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.area(1)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("name")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("name", 5, 5)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("name", "hi")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("name", [1, 2])
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("name", True)
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("name", {1, 2})
Traceback (most recent call last):
...
TypeError: name must be an integer
