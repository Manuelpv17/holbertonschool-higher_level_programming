The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

>>> add_integer(6)
104
>>> add_integer(-10, "Hello World")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/manuel/holberton/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 23, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(-10, 5, 20)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer("hola")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/manuel/holberton/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 21, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(2*i)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'i' is not defined
>>> add_integer(j)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'j' is not defined
>>> add_integer(-10, 60)
50



    